<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.escort.mapper.EscortMemberMapper">
    
    <resultMap type="EscortMember" id="EscortMemberResult">
        <result property="memberId"    column="member_id"    />
        <result property="memberBusinessId"    column="member_business_id"    />
        <result property="memberBusinessName"    column="member_business_name"    />
        <result property="memberCorpId"    column="member_corp_id"    />
        <result property="memberCorpName"    column="member_corp_name"    />
        <result property="memberName"    column="member_name"    />
        <result property="memberPhone"    column="member_phone"    />
        <result property="delFlag"    column="del_flag"    />
        <result property="createBy"    column="create_by"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateBy"    column="update_by"    />
        <result property="updateTime"    column="update_time"    />
        <result property="remark"    column="remark"    />
    </resultMap>

    <sql id="selectEscortMemberVo">
        select member_id, member_business_id, member_business_name, member_corp_id, member_corp_name, member_name, member_phone, del_flag, create_by, create_time, update_by, update_time, remark from escort_member
    </sql>

    <select id="selectEscortMemberList" parameterType="EscortMember" resultMap="EscortMemberResult">
        <include refid="selectEscortMemberVo"/>
        <where>  
            <if test="memberName != null  and memberName != ''"> and member_name like concat('%', #{memberName}, '%')</if>
            <if test="memberPhone != null  and memberPhone != ''"> and member_phone like concat('%', #{memberPhone}, '%')</if>
        </where>
    </select>
    
    <select id="selectEscortMemberByMemberId" parameterType="Long" resultMap="EscortMemberResult">
        <include refid="selectEscortMemberVo"/>
        where member_id = #{memberId}
    </select>
        
    <insert id="insertEscortMember" parameterType="EscortMember" useGeneratedKeys="true" keyProperty="memberId">
        insert into escort_member
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="memberBusinessId != null">member_business_id,</if>
            <if test="memberBusinessName != null">member_business_name,</if>
            <if test="memberCorpId != null">member_corp_id,</if>
            <if test="memberCorpName != null">member_corp_name,</if>
            <if test="memberName != null">member_name,</if>
            <if test="memberPhone != null">member_phone,</if>
            <if test="delFlag != null">del_flag,</if>
            <if test="createBy != null">create_by,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateBy != null">update_by,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="remark != null">remark,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="memberBusinessId != null">#{memberBusinessId},</if>
            <if test="memberBusinessName != null">#{memberBusinessName},</if>
            <if test="memberCorpId != null">#{memberCorpId},</if>
            <if test="memberCorpName != null">#{memberCorpName},</if>
            <if test="memberName != null">#{memberName},</if>
            <if test="memberPhone != null">#{memberPhone},</if>
            <if test="delFlag != null">#{delFlag},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateBy != null">#{updateBy},</if>
            <if test="updateTime != null">#{updateTime},</if>
            <if test="remark != null">#{remark},</if>
         </trim>
    </insert>

    <update id="updateEscortMember" parameterType="EscortMember">
        update escort_member
        <trim prefix="SET" suffixOverrides=",">
            <if test="memberBusinessId != null">member_business_id = #{memberBusinessId},</if>
            <if test="memberBusinessName != null">member_business_name = #{memberBusinessName},</if>
            <if test="memberCorpId != null">member_corp_id = #{memberCorpId},</if>
            <if test="memberCorpName != null">member_corp_name = #{memberCorpName},</if>
            <if test="memberName != null">member_name = #{memberName},</if>
            <if test="memberPhone != null">member_phone = #{memberPhone},</if>
            <if test="delFlag != null">del_flag = #{delFlag},</if>
            <if test="createBy != null">create_by = #{createBy},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="remark != null">remark = #{remark},</if>
        </trim>
        where member_id = #{memberId}
    </update>

    <delete id="deleteEscortMemberByMemberId" parameterType="Long">
        delete from escort_member where member_id = #{memberId}
    </delete>

    <delete id="deleteEscortMemberByMemberIds" parameterType="String">
        delete from escort_member where member_id in 
        <foreach item="memberId" collection="array" open="(" separator="," close=")">
            #{memberId}
        </foreach>
    </delete>
</mapper>